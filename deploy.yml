---
- name: Playbook deploy Workplace Backup
  hosts: 127.0.0.1
  connection: local
  
  vars:
    application_user: 'workplace'
    application_group: 'webpoint'
    application_logfile: 'workplace.log'
    application_path: '/u/htdocs/webpoint'

    mysql_address: "10.224.248.87"
    mysql_user: "{{ application_user }}"
    mysql_database: "{{ application_user }}_db"
    mysql_password: "FlCXmliOzjKkk82VZjkArDZdV"
    
    mysql_root: 'applivestreaming' 
    mysql_root_password: 'csU3U4WScFcEF6GSLANpQrXL'

    virtualhost_config: '{{ application_user }}.conf'
    url: '{{ application_user }}.terra.com.br'
    port: 8086

  tasks:
  - name: Ensure Node.js and npm are installed
    package:
      name: "{{ item }}"
      state: present
    loop:
      - nodejs
      - npm

  - name: Create application user
    user:
      name: '{{ application_user }}'
      comment: Application User
      group: '{{application_group}}'
      shell: /bin/bash
      state: present
      home: '{{ application_path }}/{{ application_user }}'

  - name: Create public_html directory
    file:
      path: '{{ application_path }}/{{ application_user }}/public_html'
      state: directory
      owner: '{{ application_user }}'
      group: '{{application_group}}'
      mode: 0755

  - name: Create logfile
    file:
      path: '{{ application_path }}/{{ application_user }}/public_html/{{ application_logfile }}'
      state: touch
      owner: '{{ application_user }}'
      group: '{{application_group}}'
      mode: 0644

  - name: Delete Blueprints
    file:
      path: '{{ application_path }}/{{ application_user }}/public_html/app/blueprints'
      state: absent

  - name: Delete Static JS
    file:
      path: '{{ application_path }}/{{ application_user }}/public_html/app/static/js'
      state: absent

  - name: Delete Static CSS
    file:
      path: '{{ application_path }}/{{ application_user }}/public_html/app/static/css'
      state: absent

  - name: Copy applicaiton source
    copy:
      src: ./app
      dest: '{{ application_path }}/{{ application_user }}/public_html/'
      remote_src: yes
      owner: '{{ application_user }}'
      group: '{{application_group}}'

  - name: Copy requirements.txt
    copy:
      src: ./requirements.txt
      dest: '{{ application_path }}/{{ application_user }}/public_html/'
      remote_src: yes
      owner: '{{ application_user }}'
      group: '{{application_group}}'

  - name: Create systemd service file
    template:
      src: .service
      dest: /etc/systemd/system/{{application_user}}.service
    notify:
      - Restart Systemd

  - name: Copy WSGI
    copy:
      src: ./wsgi.py
      dest: '{{ application_path }}/{{ application_user }}/public_html/'
      remote_src: yes
      owner: '{{ application_user }}'
      group: '{{application_group}}'

  - name: Gunicorn config file
    template:
      src: gunicorn.conf.py
      dest: "{{ application_path }}/{{ application_user }}/public_html/"
      remote_src: yes
      owner: '{{ application_user }}'
      group: '{{application_group}}'

  - name: Configuration file
    copy:
      src: ./config.py
      dest: '{{ application_path }}/{{ application_user }}/public_html/'
      remote_src: yes
      owner: '{{ application_user }}'
      group: '{{application_group}}'

  - name: .env file
    copy:
      dest: '{{ application_path }}/{{ application_user }}/public_html/.env'
      owner: '{{ application_user }}'
      group: '{{application_group}}'
      content: |
        FLASK_APP=app
        FLASK_DEBUG=False
        FLASK_CONFIG_FILE=config.ProductionConfig
        SECRET_KEY=jlq9G3uXOXia4JruGWvjbBh2ow3Y8OMU6zUrD3430lW
        MYSQL_ADDRESS={{ mysql_address }}
        MYSQL_DATABASE={{ mysql_database }}
        MYSQL_USER={{ mysql_user }} 
        MYSQL_PASSWORD={{ mysql_password }} 
        APP_DOMAIN={{ url }}

  - name: Create a new database
    mysql_db: 
      login_user: "{{ mysql_root }}"
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ mysql_address }}" 
      name: "{{ mysql_database }}"
      state: present 
      collation: utf8_general_ci

  - name: Create mysql user
    mysql_user:
      login_user: "{{ mysql_root }}"
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ mysql_address }}" 
      name: "{{ mysql_user }}"
      password: "{{ mysql_password }}" 
      priv: "{{ mysql_database }}.*:ALL"
      host: "{{ mysql_address }}"

  - name: Create python virtualenv and install requirements
    pip:
      virtualenv_command: /usr/bin/python3 -m venv
      virtualenv: '{{ application_path }}/{{ application_user }}/public_html/env'
      requirements: '{{ application_path }}/{{ application_user }}/public_html/requirements.txt'

  - name: Install npm packages from package.json
    community.general.npm:
      path: '{{ application_path }}/{{ application_user }}/public_html/app/static'
      state: present

  - name: Nginx Virtual Host
    template:
      src: .virtualhost
      dest: /etc/nginx/conf.d/{{ virtualhost_config }}

  - name: Restart Application
    systemd:
      name: workplace
      state: restarted

  handlers:
    - name: Restart Systemd
      systemd:
        daemon_reload: yes
    
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

    - name: Restart Application
      systemd:
        name: workplace
        state: restarted